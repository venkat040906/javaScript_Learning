Execution Context

When you run any JavaScript, a special environment is created to handle the trnsformation
and execution of code. this is called the execution context. it 
contains the currently running code and everything that aids in its execution

there is a global execution context as well as a function execution context for every function invoked

memory 
name:'john'
x:100
y:300

fun:{...}

This is variable envirnment that stores all of your variables and functions as key:value pairs in memory

execution code

{}

this is the thread of execution. each line of code is executed line by line

Execution Context Phases
-memory creation Phases:
1. create the global object (browse=window,node.js=global)
2. create the object and bind it tio the global object
3. setup memory heap for storing variable and function references
4. store function and variables in global execution context and set to 'undefined'

execution Phases:
1. Execution code line by line
2. Create a new execution context for the each function call